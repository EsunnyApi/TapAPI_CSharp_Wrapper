/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace TapQuoteAPI {

using System;
using System.Runtime.InteropServices;

public class ITapQuoteAPINotify : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ITapQuoteAPINotify(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ITapQuoteAPINotify obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ITapQuoteAPINotify() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          TapQuotePINVOKE.delete_ITapQuoteAPINotify(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public virtual void OnRspLogin(int errorCode, TapAPIQuotLoginRspInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspLogin(swigCPtr, errorCode, TapAPIQuotLoginRspInfo.getCPtr(info));
  }

  public virtual void OnAPIReady() {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnAPIReady(swigCPtr);
  }

  public virtual void OnDisconnect(int reasonCode) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnDisconnect(swigCPtr, reasonCode);
  }

  public virtual void OnRspChangePassword(uint sessionID, int errorCode) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspChangePassword(swigCPtr, sessionID, errorCode);
  }

  public virtual void OnRspQryExchange(uint sessionID, int errorCode, char isLast, TapAPIExchangeInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspQryExchange(swigCPtr, sessionID, errorCode, isLast, TapAPIExchangeInfo.getCPtr(info));
  }

  public virtual void OnRspQryCommodity(uint sessionID, int errorCode, char isLast, TapAPIQuoteCommodityInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspQryCommodity(swigCPtr, sessionID, errorCode, isLast, TapAPIQuoteCommodityInfo.getCPtr(info));
  }

  public virtual void OnRspQryTimeBucketOfCommodity(uint sessionID, int errorCode, char isLast, TapAPITimeBucketOfCommodityInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspQryTimeBucketOfCommodity(swigCPtr, sessionID, errorCode, isLast, TapAPITimeBucketOfCommodityInfo.getCPtr(info));
  }

  public virtual void OnRtnTimeBucketOfCommodity(TapAPITimeBucketOfCommodityInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRtnTimeBucketOfCommodity(swigCPtr, TapAPITimeBucketOfCommodityInfo.getCPtr(info));
  }

  public virtual void OnRspQryContract(uint sessionID, int errorCode, char isLast, TapAPIQuoteContractInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspQryContract(swigCPtr, sessionID, errorCode, isLast, TapAPIQuoteContractInfo.getCPtr(info));
  }

  public virtual void OnRtnContract(TapAPIQuoteContractInfo info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRtnContract(swigCPtr, TapAPIQuoteContractInfo.getCPtr(info));
  }

  public virtual void OnRspSubscribeQuote(uint sessionID, int errorCode, char isLast, TapAPIQuoteWhole info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspSubscribeQuote(swigCPtr, sessionID, errorCode, isLast, TapAPIQuoteWhole.getCPtr(info));
  }

  public virtual void OnRspUnSubscribeQuote(uint sessionID, int errorCode, char isLast, TapAPIContract info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspUnSubscribeQuote(swigCPtr, sessionID, errorCode, isLast, TapAPIContract.getCPtr(info));
  }

  public virtual void OnRtnQuote(TapAPIQuoteWhole info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRtnQuote(swigCPtr, TapAPIQuoteWhole.getCPtr(info));
  }

  public virtual void OnRspQryHisQuote(uint sessionID, int errorCode, char isLast, TapAPIHisQuoteQryRsp info) {
    TapQuotePINVOKE.ITapQuoteAPINotify_OnRspQryHisQuote(swigCPtr, sessionID, errorCode, isLast, TapAPIHisQuoteQryRsp.getCPtr(info));
  }

  public ITapQuoteAPINotify() : this(TapQuotePINVOKE.new_ITapQuoteAPINotify__SWIG_0(), true) {
    SwigDirectorConnect();
  }

  public ITapQuoteAPINotify(ITapQuoteAPINotify other) : this(TapQuotePINVOKE.new_ITapQuoteAPINotify__SWIG_1(ITapQuoteAPINotify.getCPtr(other)), true) {
    if (TapQuotePINVOKE.SWIGPendingException.Pending) throw TapQuotePINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnRspLogin", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateITapQuoteAPINotify_0(SwigDirectorOnRspLogin);
    if (SwigDerivedClassHasMethod("OnAPIReady", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateITapQuoteAPINotify_1(SwigDirectorOnAPIReady);
    if (SwigDerivedClassHasMethod("OnDisconnect", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateITapQuoteAPINotify_2(SwigDirectorOnDisconnect);
    if (SwigDerivedClassHasMethod("OnRspChangePassword", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateITapQuoteAPINotify_3(SwigDirectorOnRspChangePassword);
    if (SwigDerivedClassHasMethod("OnRspQryExchange", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateITapQuoteAPINotify_4(SwigDirectorOnRspQryExchange);
    if (SwigDerivedClassHasMethod("OnRspQryCommodity", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateITapQuoteAPINotify_5(SwigDirectorOnRspQryCommodity);
    if (SwigDerivedClassHasMethod("OnRspQryTimeBucketOfCommodity", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateITapQuoteAPINotify_6(SwigDirectorOnRspQryTimeBucketOfCommodity);
    if (SwigDerivedClassHasMethod("OnRtnTimeBucketOfCommodity", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateITapQuoteAPINotify_7(SwigDirectorOnRtnTimeBucketOfCommodity);
    if (SwigDerivedClassHasMethod("OnRspQryContract", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateITapQuoteAPINotify_8(SwigDirectorOnRspQryContract);
    if (SwigDerivedClassHasMethod("OnRtnContract", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateITapQuoteAPINotify_9(SwigDirectorOnRtnContract);
    if (SwigDerivedClassHasMethod("OnRspSubscribeQuote", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateITapQuoteAPINotify_10(SwigDirectorOnRspSubscribeQuote);
    if (SwigDerivedClassHasMethod("OnRspUnSubscribeQuote", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateITapQuoteAPINotify_11(SwigDirectorOnRspUnSubscribeQuote);
    if (SwigDerivedClassHasMethod("OnRtnQuote", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateITapQuoteAPINotify_12(SwigDirectorOnRtnQuote);
    if (SwigDerivedClassHasMethod("OnRspQryHisQuote", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateITapQuoteAPINotify_13(SwigDirectorOnRspQryHisQuote);
    TapQuotePINVOKE.ITapQuoteAPINotify_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(ITapQuoteAPINotify));
    return hasDerivedMethod;
  }

  private void SwigDirectorOnRspLogin(int errorCode, IntPtr info) {
    OnRspLogin(errorCode, (info == IntPtr.Zero) ? null : new TapAPIQuotLoginRspInfo(info, false));
  }

  private void SwigDirectorOnAPIReady() {
    OnAPIReady();
  }

  private void SwigDirectorOnDisconnect(int reasonCode) {
    OnDisconnect(reasonCode);
  }

  private void SwigDirectorOnRspChangePassword(uint sessionID, int errorCode) {
    OnRspChangePassword(sessionID, errorCode);
  }

  private void SwigDirectorOnRspQryExchange(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspQryExchange(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPIExchangeInfo(info, false));
  }

  private void SwigDirectorOnRspQryCommodity(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspQryCommodity(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPIQuoteCommodityInfo(info, false));
  }

  private void SwigDirectorOnRspQryTimeBucketOfCommodity(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspQryTimeBucketOfCommodity(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPITimeBucketOfCommodityInfo(info, false));
  }

  private void SwigDirectorOnRtnTimeBucketOfCommodity(IntPtr info) {
    OnRtnTimeBucketOfCommodity((info == IntPtr.Zero) ? null : new TapAPITimeBucketOfCommodityInfo(info, false));
  }

  private void SwigDirectorOnRspQryContract(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspQryContract(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPIQuoteContractInfo(info, false));
  }

  private void SwigDirectorOnRtnContract(IntPtr info) {
    OnRtnContract((info == IntPtr.Zero) ? null : new TapAPIQuoteContractInfo(info, false));
  }

  private void SwigDirectorOnRspSubscribeQuote(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspSubscribeQuote(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPIQuoteWhole(info, false));
  }

  private void SwigDirectorOnRspUnSubscribeQuote(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspUnSubscribeQuote(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPIContract(info, false));
  }

  private void SwigDirectorOnRtnQuote(IntPtr info) {
    OnRtnQuote((info == IntPtr.Zero) ? null : new TapAPIQuoteWhole(info, false));
  }

  private void SwigDirectorOnRspQryHisQuote(uint sessionID, int errorCode, char isLast, IntPtr info) {
    OnRspQryHisQuote(sessionID, errorCode, isLast, (info == IntPtr.Zero) ? null : new TapAPIHisQuoteQryRsp(info, false));
  }

  public delegate void SwigDelegateITapQuoteAPINotify_0(int errorCode, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_1();
  public delegate void SwigDelegateITapQuoteAPINotify_2(int reasonCode);
  public delegate void SwigDelegateITapQuoteAPINotify_3(uint sessionID, int errorCode);
  public delegate void SwigDelegateITapQuoteAPINotify_4(uint sessionID, int errorCode, char isLast, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_5(uint sessionID, int errorCode, char isLast, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_6(uint sessionID, int errorCode, char isLast, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_7(IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_8(uint sessionID, int errorCode, char isLast, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_9(IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_10(uint sessionID, int errorCode, char isLast, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_11(uint sessionID, int errorCode, char isLast, IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_12(IntPtr info);
  public delegate void SwigDelegateITapQuoteAPINotify_13(uint sessionID, int errorCode, char isLast, IntPtr info);

  private SwigDelegateITapQuoteAPINotify_0 swigDelegate0;
  private SwigDelegateITapQuoteAPINotify_1 swigDelegate1;
  private SwigDelegateITapQuoteAPINotify_2 swigDelegate2;
  private SwigDelegateITapQuoteAPINotify_3 swigDelegate3;
  private SwigDelegateITapQuoteAPINotify_4 swigDelegate4;
  private SwigDelegateITapQuoteAPINotify_5 swigDelegate5;
  private SwigDelegateITapQuoteAPINotify_6 swigDelegate6;
  private SwigDelegateITapQuoteAPINotify_7 swigDelegate7;
  private SwigDelegateITapQuoteAPINotify_8 swigDelegate8;
  private SwigDelegateITapQuoteAPINotify_9 swigDelegate9;
  private SwigDelegateITapQuoteAPINotify_10 swigDelegate10;
  private SwigDelegateITapQuoteAPINotify_11 swigDelegate11;
  private SwigDelegateITapQuoteAPINotify_12 swigDelegate12;
  private SwigDelegateITapQuoteAPINotify_13 swigDelegate13;

  private static Type[] swigMethodTypes0 = new Type[] { typeof(int), typeof(TapAPIQuotLoginRspInfo) };
  private static Type[] swigMethodTypes1 = new Type[] {  };
  private static Type[] swigMethodTypes2 = new Type[] { typeof(int) };
  private static Type[] swigMethodTypes3 = new Type[] { typeof(uint), typeof(int) };
  private static Type[] swigMethodTypes4 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIExchangeInfo) };
  private static Type[] swigMethodTypes5 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIQuoteCommodityInfo) };
  private static Type[] swigMethodTypes6 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPITimeBucketOfCommodityInfo) };
  private static Type[] swigMethodTypes7 = new Type[] { typeof(TapAPITimeBucketOfCommodityInfo) };
  private static Type[] swigMethodTypes8 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIQuoteContractInfo) };
  private static Type[] swigMethodTypes9 = new Type[] { typeof(TapAPIQuoteContractInfo) };
  private static Type[] swigMethodTypes10 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIQuoteWhole) };
  private static Type[] swigMethodTypes11 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIContract) };
  private static Type[] swigMethodTypes12 = new Type[] { typeof(TapAPIQuoteWhole) };
  private static Type[] swigMethodTypes13 = new Type[] { typeof(uint), typeof(int), typeof(char), typeof(TapAPIHisQuoteQryRsp) };
}

}
